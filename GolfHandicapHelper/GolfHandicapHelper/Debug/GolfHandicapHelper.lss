
GolfHandicapHelper.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  000007f6  0000086a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000007f6  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  00000874  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000008d0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 000000a0  00000000  00000000  00000910  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d87  00000000  00000000  000009b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000099e  00000000  00000000  00001737  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000727  00000000  00000000  000020d5  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  0000013c  00000000  00000000  000027fc  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000454  00000000  00000000  00002938  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000003ca  00000000  00000000  00002d8c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  00003156  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   8:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
   c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  10:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  14:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  18:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  1c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  20:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  24:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  28:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  2c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  30:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  34:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  38:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  3c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  40:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  44:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  48:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  4c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  50:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  54:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  58:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  5c:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  60:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>
  64:	0c 94 49 00 	jmp	0x92	; 0x92 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e6 ef       	ldi	r30, 0xF6	; 246
  7c:	f7 e0       	ldi	r31, 0x07	; 7
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 30       	cpi	r26, 0x0A	; 10
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>
  8a:	0e 94 05 01 	call	0x20a	; 0x20a <main>
  8e:	0c 94 f9 03 	jmp	0x7f2	; 0x7f2 <_exit>

00000092 <__bad_interrupt>:
  92:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000096 <initSystem>:
	Initiates sytem
*/
/* ------------------------------------------------------------------------- */
void initSystem(void)
{
	DDRD = 0xFF;
  96:	8f ef       	ldi	r24, 0xFF	; 255
  98:	8a b9       	out	0x0a, r24	; 10
	DDRB = 0xFF;
  9a:	84 b9       	out	0x04, r24	; 4
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  9c:	83 ed       	ldi	r24, 0xD3	; 211
  9e:	90 e3       	ldi	r25, 0x30	; 48
  a0:	01 97       	sbiw	r24, 0x01	; 1
  a2:	f1 f7       	brne	.-4      	; 0xa0 <initSystem+0xa>
  a4:	00 c0       	rjmp	.+0      	; 0xa6 <initSystem+0x10>
  a6:	00 00       	nop
  a8:	08 95       	ret

000000aa <send_it>:
	Performs the actions needed to send data 
*/
/* ------------------------------------------------------------------------- */
void send_it(void) 
{
	ENABLE;
  aa:	2a 9a       	sbi	0x05, 2	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  ac:	86 ea       	ldi	r24, 0xA6	; 166
  ae:	8a 95       	dec	r24
  b0:	f1 f7       	brne	.-4      	; 0xae <send_it+0x4>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <send_it+0xa>
	_delay_us(500);
	DISABLE;
  b4:	2a 98       	cbi	0x05, 2	; 5
  b6:	86 ea       	ldi	r24, 0xA6	; 166
  b8:	8a 95       	dec	r24
  ba:	f1 f7       	brne	.-4      	; 0xb8 <send_it+0xe>
  bc:	00 c0       	rjmp	.+0      	; 0xbe <send_it+0x14>
  be:	08 95       	ret

000000c0 <set_cursorLcd>:
	b = column
*/
/* ------------------------------------------------------------------------- */
void set_cursorLcd(int a, int b) 
{
	RS_INSTR;
  c0:	29 98       	cbi	0x05, 1	; 5
	if (a==1){
  c2:	81 30       	cpi	r24, 0x01	; 1
  c4:	91 05       	cpc	r25, r1
  c6:	29 f4       	brne	.+10     	; 0xd2 <set_cursorLcd+0x12>
		PORTD = 0x80 + b;
  c8:	60 58       	subi	r22, 0x80	; 128
  ca:	6b b9       	out	0x0b, r22	; 11
		send_it();
  cc:	0e 94 55 00 	call	0xaa	; 0xaa <send_it>
  d0:	08 95       	ret
	}
	else if (a==2){
  d2:	02 97       	sbiw	r24, 0x02	; 2
  d4:	21 f4       	brne	.+8      	; 0xde <set_cursorLcd+0x1e>
		PORTD = 0xC0 + b;
  d6:	60 54       	subi	r22, 0x40	; 64
  d8:	6b b9       	out	0x0b, r22	; 11
		send_it();
  da:	0e 94 55 00 	call	0xaa	; 0xaa <send_it>
  de:	08 95       	ret

000000e0 <printLcdChar>:
/*
	Prints the characters given from input to function
*/
/* ------------------------------------------------------------------------- */
void printLcdChar(char *input, int cursor) 
{
  e0:	ef 92       	push	r14
  e2:	ff 92       	push	r15
  e4:	0f 93       	push	r16
  e6:	1f 93       	push	r17
  e8:	cf 93       	push	r28
  ea:	df 93       	push	r29
  ec:	7c 01       	movw	r14, r24
  ee:	cb 01       	movw	r24, r22
	RS_SIGN;	
  f0:	29 9a       	sbi	0x05, 1	; 5
	int a = strlen(input); 
  f2:	f7 01       	movw	r30, r14
  f4:	01 90       	ld	r0, Z+
  f6:	00 20       	and	r0, r0
  f8:	e9 f7       	brne	.-6      	; 0xf4 <printLcdChar+0x14>
  fa:	31 97       	sbiw	r30, 0x01	; 1
  fc:	8f 01       	movw	r16, r30
  fe:	0e 19       	sub	r16, r14
 100:	1f 09       	sbc	r17, r15
	set_cursorLcd(cursor, 0);
 102:	60 e0       	ldi	r22, 0x00	; 0
 104:	70 e0       	ldi	r23, 0x00	; 0
 106:	0e 94 60 00 	call	0xc0	; 0xc0 <set_cursorLcd>
	for (int ix = 0; ix < a; ix++){
 10a:	10 16       	cp	r1, r16
 10c:	11 06       	cpc	r1, r17
 10e:	54 f4       	brge	.+20     	; 0x124 <printLcdChar+0x44>
 110:	e7 01       	movw	r28, r14
 112:	0e 0d       	add	r16, r14
 114:	1f 1d       	adc	r17, r15
		PORTD = input[ix];
 116:	99 91       	ld	r25, Y+
 118:	9b b9       	out	0x0b, r25	; 11
		send_it();
 11a:	0e 94 55 00 	call	0xaa	; 0xaa <send_it>
void printLcdChar(char *input, int cursor) 
{
	RS_SIGN;	
	int a = strlen(input); 
	set_cursorLcd(cursor, 0);
	for (int ix = 0; ix < a; ix++){
 11e:	c0 17       	cp	r28, r16
 120:	d1 07       	cpc	r29, r17
 122:	c9 f7       	brne	.-14     	; 0x116 <printLcdChar+0x36>
		PORTD = input[ix];
		send_it();
	}
}
 124:	df 91       	pop	r29
 126:	cf 91       	pop	r28
 128:	1f 91       	pop	r17
 12a:	0f 91       	pop	r16
 12c:	ff 90       	pop	r15
 12e:	ef 90       	pop	r14
 130:	08 95       	ret

00000132 <printLcdInt>:
	Prints the integers given from input to function. 
	First puts the integer in char string, then send.
*/
/* ------------------------------------------------------------------------- */
void printLcdInt(int input, int cursor) 
{
 132:	cf 92       	push	r12
 134:	df 92       	push	r13
 136:	ef 92       	push	r14
 138:	ff 92       	push	r15
 13a:	0f 93       	push	r16
 13c:	1f 93       	push	r17
 13e:	cf 93       	push	r28
 140:	df 93       	push	r29
 142:	00 d0       	rcall	.+0      	; 0x144 <printLcdInt+0x12>
 144:	00 d0       	rcall	.+0      	; 0x146 <printLcdInt+0x14>
 146:	cd b7       	in	r28, 0x3d	; 61
 148:	de b7       	in	r29, 0x3e	; 62
 14a:	6b 01       	movw	r12, r22
	RS_SIGN;	
 14c:	29 9a       	sbi	0x05, 1	; 5
	char CharBuffer[4];
	sprintf(CharBuffer, "%d", input);
 14e:	9f 93       	push	r25
 150:	8f 93       	push	r24
 152:	20 e0       	ldi	r18, 0x00	; 0
 154:	31 e0       	ldi	r19, 0x01	; 1
 156:	3f 93       	push	r19
 158:	2f 93       	push	r18
 15a:	8e 01       	movw	r16, r28
 15c:	0f 5f       	subi	r16, 0xFF	; 255
 15e:	1f 4f       	sbci	r17, 0xFF	; 255
 160:	1f 93       	push	r17
 162:	0f 93       	push	r16
 164:	0e 94 21 01 	call	0x242	; 0x242 <sprintf>
	int a = strlen(CharBuffer); 
 168:	f8 01       	movw	r30, r16
 16a:	01 90       	ld	r0, Z+
 16c:	00 20       	and	r0, r0
 16e:	e9 f7       	brne	.-6      	; 0x16a <printLcdInt+0x38>
 170:	31 97       	sbiw	r30, 0x01	; 1
 172:	7f 01       	movw	r14, r30
 174:	e0 1a       	sub	r14, r16
 176:	f1 0a       	sbc	r15, r17
	set_cursorLcd(cursor, 0);
 178:	60 e0       	ldi	r22, 0x00	; 0
 17a:	70 e0       	ldi	r23, 0x00	; 0
 17c:	c6 01       	movw	r24, r12
 17e:	0e 94 60 00 	call	0xc0	; 0xc0 <set_cursorLcd>
	for (int ix = 0; ix < a; ix++){
 182:	0f 90       	pop	r0
 184:	0f 90       	pop	r0
 186:	0f 90       	pop	r0
 188:	0f 90       	pop	r0
 18a:	0f 90       	pop	r0
 18c:	0f 90       	pop	r0
 18e:	1e 14       	cp	r1, r14
 190:	1f 04       	cpc	r1, r15
 192:	5c f4       	brge	.+22     	; 0x1aa <printLcdInt+0x78>
 194:	e0 0e       	add	r14, r16
 196:	f1 1e       	adc	r15, r17
		PORTD = CharBuffer[ix];
 198:	f8 01       	movw	r30, r16
 19a:	81 91       	ld	r24, Z+
 19c:	8f 01       	movw	r16, r30
 19e:	8b b9       	out	0x0b, r24	; 11
		send_it();
 1a0:	0e 94 55 00 	call	0xaa	; 0xaa <send_it>
	RS_SIGN;	
	char CharBuffer[4];
	sprintf(CharBuffer, "%d", input);
	int a = strlen(CharBuffer); 
	set_cursorLcd(cursor, 0);
	for (int ix = 0; ix < a; ix++){
 1a4:	0e 15       	cp	r16, r14
 1a6:	1f 05       	cpc	r17, r15
 1a8:	b9 f7       	brne	.-18     	; 0x198 <printLcdInt+0x66>
		PORTD = CharBuffer[ix];
		send_it();
	}
}
 1aa:	0f 90       	pop	r0
 1ac:	0f 90       	pop	r0
 1ae:	0f 90       	pop	r0
 1b0:	0f 90       	pop	r0
 1b2:	df 91       	pop	r29
 1b4:	cf 91       	pop	r28
 1b6:	1f 91       	pop	r17
 1b8:	0f 91       	pop	r16
 1ba:	ff 90       	pop	r15
 1bc:	ef 90       	pop	r14
 1be:	df 90       	pop	r13
 1c0:	cf 90       	pop	r12
 1c2:	08 95       	ret

000001c4 <clearLcd>:
	Clears screen
*/
/* ------------------------------------------------------------------------- */
void clearLcd(void) 
{
	RS_INSTR;
 1c4:	29 98       	cbi	0x05, 1	; 5
	//Clear screen
	PORTD = 0x01;
 1c6:	81 e0       	ldi	r24, 0x01	; 1
 1c8:	8b b9       	out	0x0b, r24	; 11
	send_it();
 1ca:	0e 94 55 00 	call	0xaa	; 0xaa <send_it>
 1ce:	08 95       	ret

000001d0 <initLcd>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1d0:	83 ed       	ldi	r24, 0xD3	; 211
 1d2:	90 e3       	ldi	r25, 0x30	; 48
 1d4:	01 97       	sbiw	r24, 0x01	; 1
 1d6:	f1 f7       	brne	.-4      	; 0x1d4 <initLcd+0x4>
 1d8:	00 c0       	rjmp	.+0      	; 0x1da <initLcd+0xa>
 1da:	00 00       	nop
*/
/* ------------------------------------------------------------------------- */
void initLcd(void) 
{
	_delay_ms(50);
	RS_INSTR;
 1dc:	29 98       	cbi	0x05, 1	; 5
	DISABLE;
 1de:	2a 98       	cbi	0x05, 2	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1e0:	96 ea       	ldi	r25, 0xA6	; 166
 1e2:	9a 95       	dec	r25
 1e4:	f1 f7       	brne	.-4      	; 0x1e2 <initLcd+0x12>
 1e6:	00 c0       	rjmp	.+0      	; 0x1e8 <initLcd+0x18>
	_delay_us(500);
	// Set 2 rows
	PORTD = 0b00111100;
 1e8:	8c e3       	ldi	r24, 0x3C	; 60
 1ea:	8b b9       	out	0x0b, r24	; 11
	send_it();
 1ec:	0e 94 55 00 	call	0xaa	; 0xaa <send_it>
	// Turn on screen
	PORTD = 0x0C;
 1f0:	8c e0       	ldi	r24, 0x0C	; 12
 1f2:	8b b9       	out	0x0b, r24	; 11
	send_it();
 1f4:	0e 94 55 00 	call	0xaa	; 0xaa <send_it>
	//Clear screen
	clearLcd();
 1f8:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <clearLcd>
	set_cursorLcd(1,1);
 1fc:	61 e0       	ldi	r22, 0x01	; 1
 1fe:	70 e0       	ldi	r23, 0x00	; 0
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	90 e0       	ldi	r25, 0x00	; 0
 204:	0e 94 60 00 	call	0xc0	; 0xc0 <set_cursorLcd>
 208:	08 95       	ret

0000020a <main>:



int main(void)
{
	initSystem();
 20a:	0e 94 4b 00 	call	0x96	; 0x96 <initSystem>
	initLcd();
 20e:	0e 94 e8 00 	call	0x1d0	; 0x1d0 <initLcd>
	
	while (1) {
		printLcdInt(1234, 1);
 212:	61 e0       	ldi	r22, 0x01	; 1
 214:	70 e0       	ldi	r23, 0x00	; 0
 216:	82 ed       	ldi	r24, 0xD2	; 210
 218:	94 e0       	ldi	r25, 0x04	; 4
 21a:	0e 94 99 00 	call	0x132	; 0x132 <printLcdInt>
		printLcdChar("Filip", 2);
 21e:	62 e0       	ldi	r22, 0x02	; 2
 220:	70 e0       	ldi	r23, 0x00	; 0
 222:	83 e0       	ldi	r24, 0x03	; 3
 224:	91 e0       	ldi	r25, 0x01	; 1
 226:	0e 94 70 00 	call	0xe0	; 0xe0 <printLcdChar>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 22a:	2f e3       	ldi	r18, 0x3F	; 63
 22c:	82 e4       	ldi	r24, 0x42	; 66
 22e:	9f e0       	ldi	r25, 0x0F	; 15
 230:	21 50       	subi	r18, 0x01	; 1
 232:	80 40       	sbci	r24, 0x00	; 0
 234:	90 40       	sbci	r25, 0x00	; 0
 236:	e1 f7       	brne	.-8      	; 0x230 <main+0x26>
 238:	00 c0       	rjmp	.+0      	; 0x23a <main+0x30>
 23a:	00 00       	nop
		_delay_ms(5000);
		clearLcd();
 23c:	0e 94 e2 00 	call	0x1c4	; 0x1c4 <clearLcd>
	}
 240:	e8 cf       	rjmp	.-48     	; 0x212 <main+0x8>

00000242 <sprintf>:
 242:	ae e0       	ldi	r26, 0x0E	; 14
 244:	b0 e0       	ldi	r27, 0x00	; 0
 246:	e7 e2       	ldi	r30, 0x27	; 39
 248:	f1 e0       	ldi	r31, 0x01	; 1
 24a:	0c 94 d0 03 	jmp	0x7a0	; 0x7a0 <__prologue_saves__+0x1c>
 24e:	0d 89       	ldd	r16, Y+21	; 0x15
 250:	1e 89       	ldd	r17, Y+22	; 0x16
 252:	86 e0       	ldi	r24, 0x06	; 6
 254:	8c 83       	std	Y+4, r24	; 0x04
 256:	1a 83       	std	Y+2, r17	; 0x02
 258:	09 83       	std	Y+1, r16	; 0x01
 25a:	8f ef       	ldi	r24, 0xFF	; 255
 25c:	9f e7       	ldi	r25, 0x7F	; 127
 25e:	9e 83       	std	Y+6, r25	; 0x06
 260:	8d 83       	std	Y+5, r24	; 0x05
 262:	ae 01       	movw	r20, r28
 264:	47 5e       	subi	r20, 0xE7	; 231
 266:	5f 4f       	sbci	r21, 0xFF	; 255
 268:	6f 89       	ldd	r22, Y+23	; 0x17
 26a:	78 8d       	ldd	r23, Y+24	; 0x18
 26c:	ce 01       	movw	r24, r28
 26e:	01 96       	adiw	r24, 0x01	; 1
 270:	0e 94 44 01 	call	0x288	; 0x288 <vfprintf>
 274:	2f 81       	ldd	r18, Y+7	; 0x07
 276:	38 85       	ldd	r19, Y+8	; 0x08
 278:	f8 01       	movw	r30, r16
 27a:	e2 0f       	add	r30, r18
 27c:	f3 1f       	adc	r31, r19
 27e:	10 82       	st	Z, r1
 280:	2e 96       	adiw	r28, 0x0e	; 14
 282:	e4 e0       	ldi	r30, 0x04	; 4
 284:	0c 94 ec 03 	jmp	0x7d8	; 0x7d8 <__epilogue_restores__+0x1c>

00000288 <vfprintf>:
 288:	ac e0       	ldi	r26, 0x0C	; 12
 28a:	b0 e0       	ldi	r27, 0x00	; 0
 28c:	ea e4       	ldi	r30, 0x4A	; 74
 28e:	f1 e0       	ldi	r31, 0x01	; 1
 290:	0c 94 c2 03 	jmp	0x784	; 0x784 <__prologue_saves__>
 294:	7c 01       	movw	r14, r24
 296:	6b 01       	movw	r12, r22
 298:	8a 01       	movw	r16, r20
 29a:	fc 01       	movw	r30, r24
 29c:	17 82       	std	Z+7, r1	; 0x07
 29e:	16 82       	std	Z+6, r1	; 0x06
 2a0:	83 81       	ldd	r24, Z+3	; 0x03
 2a2:	81 ff       	sbrs	r24, 1
 2a4:	bd c1       	rjmp	.+890    	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 2a6:	ce 01       	movw	r24, r28
 2a8:	01 96       	adiw	r24, 0x01	; 1
 2aa:	4c 01       	movw	r8, r24
 2ac:	f7 01       	movw	r30, r14
 2ae:	93 81       	ldd	r25, Z+3	; 0x03
 2b0:	f6 01       	movw	r30, r12
 2b2:	93 fd       	sbrc	r25, 3
 2b4:	85 91       	lpm	r24, Z+
 2b6:	93 ff       	sbrs	r25, 3
 2b8:	81 91       	ld	r24, Z+
 2ba:	6f 01       	movw	r12, r30
 2bc:	88 23       	and	r24, r24
 2be:	09 f4       	brne	.+2      	; 0x2c2 <vfprintf+0x3a>
 2c0:	ab c1       	rjmp	.+854    	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 2c2:	85 32       	cpi	r24, 0x25	; 37
 2c4:	39 f4       	brne	.+14     	; 0x2d4 <vfprintf+0x4c>
 2c6:	93 fd       	sbrc	r25, 3
 2c8:	85 91       	lpm	r24, Z+
 2ca:	93 ff       	sbrs	r25, 3
 2cc:	81 91       	ld	r24, Z+
 2ce:	6f 01       	movw	r12, r30
 2d0:	85 32       	cpi	r24, 0x25	; 37
 2d2:	29 f4       	brne	.+10     	; 0x2de <vfprintf+0x56>
 2d4:	b7 01       	movw	r22, r14
 2d6:	90 e0       	ldi	r25, 0x00	; 0
 2d8:	0e 94 2c 03 	call	0x658	; 0x658 <fputc>
 2dc:	e7 cf       	rjmp	.-50     	; 0x2ac <vfprintf+0x24>
 2de:	51 2c       	mov	r5, r1
 2e0:	31 2c       	mov	r3, r1
 2e2:	20 e0       	ldi	r18, 0x00	; 0
 2e4:	20 32       	cpi	r18, 0x20	; 32
 2e6:	a0 f4       	brcc	.+40     	; 0x310 <vfprintf+0x88>
 2e8:	8b 32       	cpi	r24, 0x2B	; 43
 2ea:	69 f0       	breq	.+26     	; 0x306 <vfprintf+0x7e>
 2ec:	30 f4       	brcc	.+12     	; 0x2fa <vfprintf+0x72>
 2ee:	80 32       	cpi	r24, 0x20	; 32
 2f0:	59 f0       	breq	.+22     	; 0x308 <vfprintf+0x80>
 2f2:	83 32       	cpi	r24, 0x23	; 35
 2f4:	69 f4       	brne	.+26     	; 0x310 <vfprintf+0x88>
 2f6:	20 61       	ori	r18, 0x10	; 16
 2f8:	2c c0       	rjmp	.+88     	; 0x352 <vfprintf+0xca>
 2fa:	8d 32       	cpi	r24, 0x2D	; 45
 2fc:	39 f0       	breq	.+14     	; 0x30c <vfprintf+0x84>
 2fe:	80 33       	cpi	r24, 0x30	; 48
 300:	39 f4       	brne	.+14     	; 0x310 <vfprintf+0x88>
 302:	21 60       	ori	r18, 0x01	; 1
 304:	26 c0       	rjmp	.+76     	; 0x352 <vfprintf+0xca>
 306:	22 60       	ori	r18, 0x02	; 2
 308:	24 60       	ori	r18, 0x04	; 4
 30a:	23 c0       	rjmp	.+70     	; 0x352 <vfprintf+0xca>
 30c:	28 60       	ori	r18, 0x08	; 8
 30e:	21 c0       	rjmp	.+66     	; 0x352 <vfprintf+0xca>
 310:	27 fd       	sbrc	r18, 7
 312:	27 c0       	rjmp	.+78     	; 0x362 <vfprintf+0xda>
 314:	30 ed       	ldi	r19, 0xD0	; 208
 316:	38 0f       	add	r19, r24
 318:	3a 30       	cpi	r19, 0x0A	; 10
 31a:	78 f4       	brcc	.+30     	; 0x33a <vfprintf+0xb2>
 31c:	26 ff       	sbrs	r18, 6
 31e:	06 c0       	rjmp	.+12     	; 0x32c <vfprintf+0xa4>
 320:	fa e0       	ldi	r31, 0x0A	; 10
 322:	5f 9e       	mul	r5, r31
 324:	30 0d       	add	r19, r0
 326:	11 24       	eor	r1, r1
 328:	53 2e       	mov	r5, r19
 32a:	13 c0       	rjmp	.+38     	; 0x352 <vfprintf+0xca>
 32c:	8a e0       	ldi	r24, 0x0A	; 10
 32e:	38 9e       	mul	r3, r24
 330:	30 0d       	add	r19, r0
 332:	11 24       	eor	r1, r1
 334:	33 2e       	mov	r3, r19
 336:	20 62       	ori	r18, 0x20	; 32
 338:	0c c0       	rjmp	.+24     	; 0x352 <vfprintf+0xca>
 33a:	8e 32       	cpi	r24, 0x2E	; 46
 33c:	21 f4       	brne	.+8      	; 0x346 <vfprintf+0xbe>
 33e:	26 fd       	sbrc	r18, 6
 340:	6b c1       	rjmp	.+726    	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 342:	20 64       	ori	r18, 0x40	; 64
 344:	06 c0       	rjmp	.+12     	; 0x352 <vfprintf+0xca>
 346:	8c 36       	cpi	r24, 0x6C	; 108
 348:	11 f4       	brne	.+4      	; 0x34e <vfprintf+0xc6>
 34a:	20 68       	ori	r18, 0x80	; 128
 34c:	02 c0       	rjmp	.+4      	; 0x352 <vfprintf+0xca>
 34e:	88 36       	cpi	r24, 0x68	; 104
 350:	41 f4       	brne	.+16     	; 0x362 <vfprintf+0xda>
 352:	f6 01       	movw	r30, r12
 354:	93 fd       	sbrc	r25, 3
 356:	85 91       	lpm	r24, Z+
 358:	93 ff       	sbrs	r25, 3
 35a:	81 91       	ld	r24, Z+
 35c:	6f 01       	movw	r12, r30
 35e:	81 11       	cpse	r24, r1
 360:	c1 cf       	rjmp	.-126    	; 0x2e4 <vfprintf+0x5c>
 362:	98 2f       	mov	r25, r24
 364:	9f 7d       	andi	r25, 0xDF	; 223
 366:	95 54       	subi	r25, 0x45	; 69
 368:	93 30       	cpi	r25, 0x03	; 3
 36a:	28 f4       	brcc	.+10     	; 0x376 <vfprintf+0xee>
 36c:	0c 5f       	subi	r16, 0xFC	; 252
 36e:	1f 4f       	sbci	r17, 0xFF	; 255
 370:	ff e3       	ldi	r31, 0x3F	; 63
 372:	f9 83       	std	Y+1, r31	; 0x01
 374:	0d c0       	rjmp	.+26     	; 0x390 <vfprintf+0x108>
 376:	83 36       	cpi	r24, 0x63	; 99
 378:	31 f0       	breq	.+12     	; 0x386 <vfprintf+0xfe>
 37a:	83 37       	cpi	r24, 0x73	; 115
 37c:	71 f0       	breq	.+28     	; 0x39a <vfprintf+0x112>
 37e:	83 35       	cpi	r24, 0x53	; 83
 380:	09 f0       	breq	.+2      	; 0x384 <vfprintf+0xfc>
 382:	5b c0       	rjmp	.+182    	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 384:	22 c0       	rjmp	.+68     	; 0x3ca <vfprintf+0x142>
 386:	f8 01       	movw	r30, r16
 388:	80 81       	ld	r24, Z
 38a:	89 83       	std	Y+1, r24	; 0x01
 38c:	0e 5f       	subi	r16, 0xFE	; 254
 38e:	1f 4f       	sbci	r17, 0xFF	; 255
 390:	44 24       	eor	r4, r4
 392:	43 94       	inc	r4
 394:	51 2c       	mov	r5, r1
 396:	54 01       	movw	r10, r8
 398:	15 c0       	rjmp	.+42     	; 0x3c4 <vfprintf+0x13c>
 39a:	38 01       	movw	r6, r16
 39c:	f2 e0       	ldi	r31, 0x02	; 2
 39e:	6f 0e       	add	r6, r31
 3a0:	71 1c       	adc	r7, r1
 3a2:	f8 01       	movw	r30, r16
 3a4:	a0 80       	ld	r10, Z
 3a6:	b1 80       	ldd	r11, Z+1	; 0x01
 3a8:	26 ff       	sbrs	r18, 6
 3aa:	03 c0       	rjmp	.+6      	; 0x3b2 <vfprintf+0x12a>
 3ac:	65 2d       	mov	r22, r5
 3ae:	70 e0       	ldi	r23, 0x00	; 0
 3b0:	02 c0       	rjmp	.+4      	; 0x3b6 <vfprintf+0x12e>
 3b2:	6f ef       	ldi	r22, 0xFF	; 255
 3b4:	7f ef       	ldi	r23, 0xFF	; 255
 3b6:	c5 01       	movw	r24, r10
 3b8:	2c 87       	std	Y+12, r18	; 0x0c
 3ba:	0e 94 21 03 	call	0x642	; 0x642 <strnlen>
 3be:	2c 01       	movw	r4, r24
 3c0:	83 01       	movw	r16, r6
 3c2:	2c 85       	ldd	r18, Y+12	; 0x0c
 3c4:	2f 77       	andi	r18, 0x7F	; 127
 3c6:	22 2e       	mov	r2, r18
 3c8:	17 c0       	rjmp	.+46     	; 0x3f8 <vfprintf+0x170>
 3ca:	38 01       	movw	r6, r16
 3cc:	f2 e0       	ldi	r31, 0x02	; 2
 3ce:	6f 0e       	add	r6, r31
 3d0:	71 1c       	adc	r7, r1
 3d2:	f8 01       	movw	r30, r16
 3d4:	a0 80       	ld	r10, Z
 3d6:	b1 80       	ldd	r11, Z+1	; 0x01
 3d8:	26 ff       	sbrs	r18, 6
 3da:	03 c0       	rjmp	.+6      	; 0x3e2 <vfprintf+0x15a>
 3dc:	65 2d       	mov	r22, r5
 3de:	70 e0       	ldi	r23, 0x00	; 0
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <vfprintf+0x15e>
 3e2:	6f ef       	ldi	r22, 0xFF	; 255
 3e4:	7f ef       	ldi	r23, 0xFF	; 255
 3e6:	c5 01       	movw	r24, r10
 3e8:	2c 87       	std	Y+12, r18	; 0x0c
 3ea:	0e 94 16 03 	call	0x62c	; 0x62c <strnlen_P>
 3ee:	2c 01       	movw	r4, r24
 3f0:	2c 85       	ldd	r18, Y+12	; 0x0c
 3f2:	20 68       	ori	r18, 0x80	; 128
 3f4:	22 2e       	mov	r2, r18
 3f6:	83 01       	movw	r16, r6
 3f8:	23 fc       	sbrc	r2, 3
 3fa:	1b c0       	rjmp	.+54     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 3fc:	83 2d       	mov	r24, r3
 3fe:	90 e0       	ldi	r25, 0x00	; 0
 400:	48 16       	cp	r4, r24
 402:	59 06       	cpc	r5, r25
 404:	b0 f4       	brcc	.+44     	; 0x432 <__LOCK_REGION_LENGTH__+0x32>
 406:	b7 01       	movw	r22, r14
 408:	80 e2       	ldi	r24, 0x20	; 32
 40a:	90 e0       	ldi	r25, 0x00	; 0
 40c:	0e 94 2c 03 	call	0x658	; 0x658 <fputc>
 410:	3a 94       	dec	r3
 412:	f4 cf       	rjmp	.-24     	; 0x3fc <vfprintf+0x174>
 414:	f5 01       	movw	r30, r10
 416:	27 fc       	sbrc	r2, 7
 418:	85 91       	lpm	r24, Z+
 41a:	27 fe       	sbrs	r2, 7
 41c:	81 91       	ld	r24, Z+
 41e:	5f 01       	movw	r10, r30
 420:	b7 01       	movw	r22, r14
 422:	90 e0       	ldi	r25, 0x00	; 0
 424:	0e 94 2c 03 	call	0x658	; 0x658 <fputc>
 428:	31 10       	cpse	r3, r1
 42a:	3a 94       	dec	r3
 42c:	f1 e0       	ldi	r31, 0x01	; 1
 42e:	4f 1a       	sub	r4, r31
 430:	51 08       	sbc	r5, r1
 432:	41 14       	cp	r4, r1
 434:	51 04       	cpc	r5, r1
 436:	71 f7       	brne	.-36     	; 0x414 <__LOCK_REGION_LENGTH__+0x14>
 438:	e5 c0       	rjmp	.+458    	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 43a:	84 36       	cpi	r24, 0x64	; 100
 43c:	11 f0       	breq	.+4      	; 0x442 <__LOCK_REGION_LENGTH__+0x42>
 43e:	89 36       	cpi	r24, 0x69	; 105
 440:	39 f5       	brne	.+78     	; 0x490 <__LOCK_REGION_LENGTH__+0x90>
 442:	f8 01       	movw	r30, r16
 444:	27 ff       	sbrs	r18, 7
 446:	07 c0       	rjmp	.+14     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 448:	60 81       	ld	r22, Z
 44a:	71 81       	ldd	r23, Z+1	; 0x01
 44c:	82 81       	ldd	r24, Z+2	; 0x02
 44e:	93 81       	ldd	r25, Z+3	; 0x03
 450:	0c 5f       	subi	r16, 0xFC	; 252
 452:	1f 4f       	sbci	r17, 0xFF	; 255
 454:	08 c0       	rjmp	.+16     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 456:	60 81       	ld	r22, Z
 458:	71 81       	ldd	r23, Z+1	; 0x01
 45a:	07 2e       	mov	r0, r23
 45c:	00 0c       	add	r0, r0
 45e:	88 0b       	sbc	r24, r24
 460:	99 0b       	sbc	r25, r25
 462:	0e 5f       	subi	r16, 0xFE	; 254
 464:	1f 4f       	sbci	r17, 0xFF	; 255
 466:	2f 76       	andi	r18, 0x6F	; 111
 468:	72 2e       	mov	r7, r18
 46a:	97 ff       	sbrs	r25, 7
 46c:	09 c0       	rjmp	.+18     	; 0x480 <__LOCK_REGION_LENGTH__+0x80>
 46e:	90 95       	com	r25
 470:	80 95       	com	r24
 472:	70 95       	com	r23
 474:	61 95       	neg	r22
 476:	7f 4f       	sbci	r23, 0xFF	; 255
 478:	8f 4f       	sbci	r24, 0xFF	; 255
 47a:	9f 4f       	sbci	r25, 0xFF	; 255
 47c:	20 68       	ori	r18, 0x80	; 128
 47e:	72 2e       	mov	r7, r18
 480:	2a e0       	ldi	r18, 0x0A	; 10
 482:	30 e0       	ldi	r19, 0x00	; 0
 484:	a4 01       	movw	r20, r8
 486:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__ultoa_invert>
 48a:	a8 2e       	mov	r10, r24
 48c:	a8 18       	sub	r10, r8
 48e:	44 c0       	rjmp	.+136    	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 490:	85 37       	cpi	r24, 0x75	; 117
 492:	29 f4       	brne	.+10     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 494:	2f 7e       	andi	r18, 0xEF	; 239
 496:	b2 2e       	mov	r11, r18
 498:	2a e0       	ldi	r18, 0x0A	; 10
 49a:	30 e0       	ldi	r19, 0x00	; 0
 49c:	25 c0       	rjmp	.+74     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 49e:	f2 2f       	mov	r31, r18
 4a0:	f9 7f       	andi	r31, 0xF9	; 249
 4a2:	bf 2e       	mov	r11, r31
 4a4:	8f 36       	cpi	r24, 0x6F	; 111
 4a6:	c1 f0       	breq	.+48     	; 0x4d8 <__LOCK_REGION_LENGTH__+0xd8>
 4a8:	18 f4       	brcc	.+6      	; 0x4b0 <__LOCK_REGION_LENGTH__+0xb0>
 4aa:	88 35       	cpi	r24, 0x58	; 88
 4ac:	79 f0       	breq	.+30     	; 0x4cc <__LOCK_REGION_LENGTH__+0xcc>
 4ae:	b4 c0       	rjmp	.+360    	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 4b0:	80 37       	cpi	r24, 0x70	; 112
 4b2:	19 f0       	breq	.+6      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4b4:	88 37       	cpi	r24, 0x78	; 120
 4b6:	21 f0       	breq	.+8      	; 0x4c0 <__LOCK_REGION_LENGTH__+0xc0>
 4b8:	af c0       	rjmp	.+350    	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 4ba:	2f 2f       	mov	r18, r31
 4bc:	20 61       	ori	r18, 0x10	; 16
 4be:	b2 2e       	mov	r11, r18
 4c0:	b4 fe       	sbrs	r11, 4
 4c2:	0d c0       	rjmp	.+26     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4c4:	8b 2d       	mov	r24, r11
 4c6:	84 60       	ori	r24, 0x04	; 4
 4c8:	b8 2e       	mov	r11, r24
 4ca:	09 c0       	rjmp	.+18     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4cc:	24 ff       	sbrs	r18, 4
 4ce:	0a c0       	rjmp	.+20     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4d0:	9f 2f       	mov	r25, r31
 4d2:	96 60       	ori	r25, 0x06	; 6
 4d4:	b9 2e       	mov	r11, r25
 4d6:	06 c0       	rjmp	.+12     	; 0x4e4 <__LOCK_REGION_LENGTH__+0xe4>
 4d8:	28 e0       	ldi	r18, 0x08	; 8
 4da:	30 e0       	ldi	r19, 0x00	; 0
 4dc:	05 c0       	rjmp	.+10     	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4de:	20 e1       	ldi	r18, 0x10	; 16
 4e0:	30 e0       	ldi	r19, 0x00	; 0
 4e2:	02 c0       	rjmp	.+4      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4e4:	20 e1       	ldi	r18, 0x10	; 16
 4e6:	32 e0       	ldi	r19, 0x02	; 2
 4e8:	f8 01       	movw	r30, r16
 4ea:	b7 fe       	sbrs	r11, 7
 4ec:	07 c0       	rjmp	.+14     	; 0x4fc <__LOCK_REGION_LENGTH__+0xfc>
 4ee:	60 81       	ld	r22, Z
 4f0:	71 81       	ldd	r23, Z+1	; 0x01
 4f2:	82 81       	ldd	r24, Z+2	; 0x02
 4f4:	93 81       	ldd	r25, Z+3	; 0x03
 4f6:	0c 5f       	subi	r16, 0xFC	; 252
 4f8:	1f 4f       	sbci	r17, 0xFF	; 255
 4fa:	06 c0       	rjmp	.+12     	; 0x508 <__LOCK_REGION_LENGTH__+0x108>
 4fc:	60 81       	ld	r22, Z
 4fe:	71 81       	ldd	r23, Z+1	; 0x01
 500:	80 e0       	ldi	r24, 0x00	; 0
 502:	90 e0       	ldi	r25, 0x00	; 0
 504:	0e 5f       	subi	r16, 0xFE	; 254
 506:	1f 4f       	sbci	r17, 0xFF	; 255
 508:	a4 01       	movw	r20, r8
 50a:	0e 94 64 03 	call	0x6c8	; 0x6c8 <__ultoa_invert>
 50e:	a8 2e       	mov	r10, r24
 510:	a8 18       	sub	r10, r8
 512:	fb 2d       	mov	r31, r11
 514:	ff 77       	andi	r31, 0x7F	; 127
 516:	7f 2e       	mov	r7, r31
 518:	76 fe       	sbrs	r7, 6
 51a:	0b c0       	rjmp	.+22     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
 51c:	37 2d       	mov	r19, r7
 51e:	3e 7f       	andi	r19, 0xFE	; 254
 520:	a5 14       	cp	r10, r5
 522:	50 f4       	brcc	.+20     	; 0x538 <__LOCK_REGION_LENGTH__+0x138>
 524:	74 fe       	sbrs	r7, 4
 526:	0a c0       	rjmp	.+20     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 528:	72 fc       	sbrc	r7, 2
 52a:	08 c0       	rjmp	.+16     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 52c:	37 2d       	mov	r19, r7
 52e:	3e 7e       	andi	r19, 0xEE	; 238
 530:	05 c0       	rjmp	.+10     	; 0x53c <__LOCK_REGION_LENGTH__+0x13c>
 532:	ba 2c       	mov	r11, r10
 534:	37 2d       	mov	r19, r7
 536:	03 c0       	rjmp	.+6      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 538:	ba 2c       	mov	r11, r10
 53a:	01 c0       	rjmp	.+2      	; 0x53e <__LOCK_REGION_LENGTH__+0x13e>
 53c:	b5 2c       	mov	r11, r5
 53e:	34 ff       	sbrs	r19, 4
 540:	0d c0       	rjmp	.+26     	; 0x55c <__LOCK_REGION_LENGTH__+0x15c>
 542:	fe 01       	movw	r30, r28
 544:	ea 0d       	add	r30, r10
 546:	f1 1d       	adc	r31, r1
 548:	80 81       	ld	r24, Z
 54a:	80 33       	cpi	r24, 0x30	; 48
 54c:	11 f4       	brne	.+4      	; 0x552 <__LOCK_REGION_LENGTH__+0x152>
 54e:	39 7e       	andi	r19, 0xE9	; 233
 550:	09 c0       	rjmp	.+18     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 552:	32 ff       	sbrs	r19, 2
 554:	06 c0       	rjmp	.+12     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 556:	b3 94       	inc	r11
 558:	b3 94       	inc	r11
 55a:	04 c0       	rjmp	.+8      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 55c:	83 2f       	mov	r24, r19
 55e:	86 78       	andi	r24, 0x86	; 134
 560:	09 f0       	breq	.+2      	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 562:	b3 94       	inc	r11
 564:	33 fd       	sbrc	r19, 3
 566:	13 c0       	rjmp	.+38     	; 0x58e <__LOCK_REGION_LENGTH__+0x18e>
 568:	30 ff       	sbrs	r19, 0
 56a:	06 c0       	rjmp	.+12     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 56c:	5a 2c       	mov	r5, r10
 56e:	b3 14       	cp	r11, r3
 570:	18 f4       	brcc	.+6      	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 572:	53 0c       	add	r5, r3
 574:	5b 18       	sub	r5, r11
 576:	b3 2c       	mov	r11, r3
 578:	b3 14       	cp	r11, r3
 57a:	68 f4       	brcc	.+26     	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 57c:	b7 01       	movw	r22, r14
 57e:	80 e2       	ldi	r24, 0x20	; 32
 580:	90 e0       	ldi	r25, 0x00	; 0
 582:	3c 87       	std	Y+12, r19	; 0x0c
 584:	0e 94 2c 03 	call	0x658	; 0x658 <fputc>
 588:	b3 94       	inc	r11
 58a:	3c 85       	ldd	r19, Y+12	; 0x0c
 58c:	f5 cf       	rjmp	.-22     	; 0x578 <__LOCK_REGION_LENGTH__+0x178>
 58e:	b3 14       	cp	r11, r3
 590:	10 f4       	brcc	.+4      	; 0x596 <__LOCK_REGION_LENGTH__+0x196>
 592:	3b 18       	sub	r3, r11
 594:	01 c0       	rjmp	.+2      	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 596:	31 2c       	mov	r3, r1
 598:	34 ff       	sbrs	r19, 4
 59a:	12 c0       	rjmp	.+36     	; 0x5c0 <__LOCK_REGION_LENGTH__+0x1c0>
 59c:	b7 01       	movw	r22, r14
 59e:	80 e3       	ldi	r24, 0x30	; 48
 5a0:	90 e0       	ldi	r25, 0x00	; 0
 5a2:	3c 87       	std	Y+12, r19	; 0x0c
 5a4:	0e 94 2c 03 	call	0x658	; 0x658 <fputc>
 5a8:	3c 85       	ldd	r19, Y+12	; 0x0c
 5aa:	32 ff       	sbrs	r19, 2
 5ac:	17 c0       	rjmp	.+46     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5ae:	31 fd       	sbrc	r19, 1
 5b0:	03 c0       	rjmp	.+6      	; 0x5b8 <__LOCK_REGION_LENGTH__+0x1b8>
 5b2:	88 e7       	ldi	r24, 0x78	; 120
 5b4:	90 e0       	ldi	r25, 0x00	; 0
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <__LOCK_REGION_LENGTH__+0x1bc>
 5b8:	88 e5       	ldi	r24, 0x58	; 88
 5ba:	90 e0       	ldi	r25, 0x00	; 0
 5bc:	b7 01       	movw	r22, r14
 5be:	0c c0       	rjmp	.+24     	; 0x5d8 <__LOCK_REGION_LENGTH__+0x1d8>
 5c0:	83 2f       	mov	r24, r19
 5c2:	86 78       	andi	r24, 0x86	; 134
 5c4:	59 f0       	breq	.+22     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5c6:	31 ff       	sbrs	r19, 1
 5c8:	02 c0       	rjmp	.+4      	; 0x5ce <__LOCK_REGION_LENGTH__+0x1ce>
 5ca:	8b e2       	ldi	r24, 0x2B	; 43
 5cc:	01 c0       	rjmp	.+2      	; 0x5d0 <__LOCK_REGION_LENGTH__+0x1d0>
 5ce:	80 e2       	ldi	r24, 0x20	; 32
 5d0:	37 fd       	sbrc	r19, 7
 5d2:	8d e2       	ldi	r24, 0x2D	; 45
 5d4:	b7 01       	movw	r22, r14
 5d6:	90 e0       	ldi	r25, 0x00	; 0
 5d8:	0e 94 2c 03 	call	0x658	; 0x658 <fputc>
 5dc:	a5 14       	cp	r10, r5
 5de:	38 f4       	brcc	.+14     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 5e0:	b7 01       	movw	r22, r14
 5e2:	80 e3       	ldi	r24, 0x30	; 48
 5e4:	90 e0       	ldi	r25, 0x00	; 0
 5e6:	0e 94 2c 03 	call	0x658	; 0x658 <fputc>
 5ea:	5a 94       	dec	r5
 5ec:	f7 cf       	rjmp	.-18     	; 0x5dc <__LOCK_REGION_LENGTH__+0x1dc>
 5ee:	aa 94       	dec	r10
 5f0:	f4 01       	movw	r30, r8
 5f2:	ea 0d       	add	r30, r10
 5f4:	f1 1d       	adc	r31, r1
 5f6:	80 81       	ld	r24, Z
 5f8:	b7 01       	movw	r22, r14
 5fa:	90 e0       	ldi	r25, 0x00	; 0
 5fc:	0e 94 2c 03 	call	0x658	; 0x658 <fputc>
 600:	a1 10       	cpse	r10, r1
 602:	f5 cf       	rjmp	.-22     	; 0x5ee <__LOCK_REGION_LENGTH__+0x1ee>
 604:	33 20       	and	r3, r3
 606:	09 f4       	brne	.+2      	; 0x60a <__LOCK_REGION_LENGTH__+0x20a>
 608:	51 ce       	rjmp	.-862    	; 0x2ac <vfprintf+0x24>
 60a:	b7 01       	movw	r22, r14
 60c:	80 e2       	ldi	r24, 0x20	; 32
 60e:	90 e0       	ldi	r25, 0x00	; 0
 610:	0e 94 2c 03 	call	0x658	; 0x658 <fputc>
 614:	3a 94       	dec	r3
 616:	f6 cf       	rjmp	.-20     	; 0x604 <__LOCK_REGION_LENGTH__+0x204>
 618:	f7 01       	movw	r30, r14
 61a:	86 81       	ldd	r24, Z+6	; 0x06
 61c:	97 81       	ldd	r25, Z+7	; 0x07
 61e:	02 c0       	rjmp	.+4      	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 620:	8f ef       	ldi	r24, 0xFF	; 255
 622:	9f ef       	ldi	r25, 0xFF	; 255
 624:	2c 96       	adiw	r28, 0x0c	; 12
 626:	e2 e1       	ldi	r30, 0x12	; 18
 628:	0c 94 de 03 	jmp	0x7bc	; 0x7bc <__epilogue_restores__>

0000062c <strnlen_P>:
 62c:	fc 01       	movw	r30, r24
 62e:	05 90       	lpm	r0, Z+
 630:	61 50       	subi	r22, 0x01	; 1
 632:	70 40       	sbci	r23, 0x00	; 0
 634:	01 10       	cpse	r0, r1
 636:	d8 f7       	brcc	.-10     	; 0x62e <strnlen_P+0x2>
 638:	80 95       	com	r24
 63a:	90 95       	com	r25
 63c:	8e 0f       	add	r24, r30
 63e:	9f 1f       	adc	r25, r31
 640:	08 95       	ret

00000642 <strnlen>:
 642:	fc 01       	movw	r30, r24
 644:	61 50       	subi	r22, 0x01	; 1
 646:	70 40       	sbci	r23, 0x00	; 0
 648:	01 90       	ld	r0, Z+
 64a:	01 10       	cpse	r0, r1
 64c:	d8 f7       	brcc	.-10     	; 0x644 <strnlen+0x2>
 64e:	80 95       	com	r24
 650:	90 95       	com	r25
 652:	8e 0f       	add	r24, r30
 654:	9f 1f       	adc	r25, r31
 656:	08 95       	ret

00000658 <fputc>:
 658:	0f 93       	push	r16
 65a:	1f 93       	push	r17
 65c:	cf 93       	push	r28
 65e:	df 93       	push	r29
 660:	fb 01       	movw	r30, r22
 662:	23 81       	ldd	r18, Z+3	; 0x03
 664:	21 fd       	sbrc	r18, 1
 666:	03 c0       	rjmp	.+6      	; 0x66e <fputc+0x16>
 668:	8f ef       	ldi	r24, 0xFF	; 255
 66a:	9f ef       	ldi	r25, 0xFF	; 255
 66c:	28 c0       	rjmp	.+80     	; 0x6be <fputc+0x66>
 66e:	22 ff       	sbrs	r18, 2
 670:	16 c0       	rjmp	.+44     	; 0x69e <fputc+0x46>
 672:	46 81       	ldd	r20, Z+6	; 0x06
 674:	57 81       	ldd	r21, Z+7	; 0x07
 676:	24 81       	ldd	r18, Z+4	; 0x04
 678:	35 81       	ldd	r19, Z+5	; 0x05
 67a:	42 17       	cp	r20, r18
 67c:	53 07       	cpc	r21, r19
 67e:	44 f4       	brge	.+16     	; 0x690 <fputc+0x38>
 680:	a0 81       	ld	r26, Z
 682:	b1 81       	ldd	r27, Z+1	; 0x01
 684:	9d 01       	movw	r18, r26
 686:	2f 5f       	subi	r18, 0xFF	; 255
 688:	3f 4f       	sbci	r19, 0xFF	; 255
 68a:	31 83       	std	Z+1, r19	; 0x01
 68c:	20 83       	st	Z, r18
 68e:	8c 93       	st	X, r24
 690:	26 81       	ldd	r18, Z+6	; 0x06
 692:	37 81       	ldd	r19, Z+7	; 0x07
 694:	2f 5f       	subi	r18, 0xFF	; 255
 696:	3f 4f       	sbci	r19, 0xFF	; 255
 698:	37 83       	std	Z+7, r19	; 0x07
 69a:	26 83       	std	Z+6, r18	; 0x06
 69c:	10 c0       	rjmp	.+32     	; 0x6be <fputc+0x66>
 69e:	eb 01       	movw	r28, r22
 6a0:	09 2f       	mov	r16, r25
 6a2:	18 2f       	mov	r17, r24
 6a4:	00 84       	ldd	r0, Z+8	; 0x08
 6a6:	f1 85       	ldd	r31, Z+9	; 0x09
 6a8:	e0 2d       	mov	r30, r0
 6aa:	09 95       	icall
 6ac:	89 2b       	or	r24, r25
 6ae:	e1 f6       	brne	.-72     	; 0x668 <fputc+0x10>
 6b0:	8e 81       	ldd	r24, Y+6	; 0x06
 6b2:	9f 81       	ldd	r25, Y+7	; 0x07
 6b4:	01 96       	adiw	r24, 0x01	; 1
 6b6:	9f 83       	std	Y+7, r25	; 0x07
 6b8:	8e 83       	std	Y+6, r24	; 0x06
 6ba:	81 2f       	mov	r24, r17
 6bc:	90 2f       	mov	r25, r16
 6be:	df 91       	pop	r29
 6c0:	cf 91       	pop	r28
 6c2:	1f 91       	pop	r17
 6c4:	0f 91       	pop	r16
 6c6:	08 95       	ret

000006c8 <__ultoa_invert>:
 6c8:	fa 01       	movw	r30, r20
 6ca:	aa 27       	eor	r26, r26
 6cc:	28 30       	cpi	r18, 0x08	; 8
 6ce:	51 f1       	breq	.+84     	; 0x724 <__ultoa_invert+0x5c>
 6d0:	20 31       	cpi	r18, 0x10	; 16
 6d2:	81 f1       	breq	.+96     	; 0x734 <__ultoa_invert+0x6c>
 6d4:	e8 94       	clt
 6d6:	6f 93       	push	r22
 6d8:	6e 7f       	andi	r22, 0xFE	; 254
 6da:	6e 5f       	subi	r22, 0xFE	; 254
 6dc:	7f 4f       	sbci	r23, 0xFF	; 255
 6de:	8f 4f       	sbci	r24, 0xFF	; 255
 6e0:	9f 4f       	sbci	r25, 0xFF	; 255
 6e2:	af 4f       	sbci	r26, 0xFF	; 255
 6e4:	b1 e0       	ldi	r27, 0x01	; 1
 6e6:	3e d0       	rcall	.+124    	; 0x764 <__ultoa_invert+0x9c>
 6e8:	b4 e0       	ldi	r27, 0x04	; 4
 6ea:	3c d0       	rcall	.+120    	; 0x764 <__ultoa_invert+0x9c>
 6ec:	67 0f       	add	r22, r23
 6ee:	78 1f       	adc	r23, r24
 6f0:	89 1f       	adc	r24, r25
 6f2:	9a 1f       	adc	r25, r26
 6f4:	a1 1d       	adc	r26, r1
 6f6:	68 0f       	add	r22, r24
 6f8:	79 1f       	adc	r23, r25
 6fa:	8a 1f       	adc	r24, r26
 6fc:	91 1d       	adc	r25, r1
 6fe:	a1 1d       	adc	r26, r1
 700:	6a 0f       	add	r22, r26
 702:	71 1d       	adc	r23, r1
 704:	81 1d       	adc	r24, r1
 706:	91 1d       	adc	r25, r1
 708:	a1 1d       	adc	r26, r1
 70a:	20 d0       	rcall	.+64     	; 0x74c <__ultoa_invert+0x84>
 70c:	09 f4       	brne	.+2      	; 0x710 <__ultoa_invert+0x48>
 70e:	68 94       	set
 710:	3f 91       	pop	r19
 712:	2a e0       	ldi	r18, 0x0A	; 10
 714:	26 9f       	mul	r18, r22
 716:	11 24       	eor	r1, r1
 718:	30 19       	sub	r19, r0
 71a:	30 5d       	subi	r19, 0xD0	; 208
 71c:	31 93       	st	Z+, r19
 71e:	de f6       	brtc	.-74     	; 0x6d6 <__ultoa_invert+0xe>
 720:	cf 01       	movw	r24, r30
 722:	08 95       	ret
 724:	46 2f       	mov	r20, r22
 726:	47 70       	andi	r20, 0x07	; 7
 728:	40 5d       	subi	r20, 0xD0	; 208
 72a:	41 93       	st	Z+, r20
 72c:	b3 e0       	ldi	r27, 0x03	; 3
 72e:	0f d0       	rcall	.+30     	; 0x74e <__ultoa_invert+0x86>
 730:	c9 f7       	brne	.-14     	; 0x724 <__ultoa_invert+0x5c>
 732:	f6 cf       	rjmp	.-20     	; 0x720 <__ultoa_invert+0x58>
 734:	46 2f       	mov	r20, r22
 736:	4f 70       	andi	r20, 0x0F	; 15
 738:	40 5d       	subi	r20, 0xD0	; 208
 73a:	4a 33       	cpi	r20, 0x3A	; 58
 73c:	18 f0       	brcs	.+6      	; 0x744 <__ultoa_invert+0x7c>
 73e:	49 5d       	subi	r20, 0xD9	; 217
 740:	31 fd       	sbrc	r19, 1
 742:	40 52       	subi	r20, 0x20	; 32
 744:	41 93       	st	Z+, r20
 746:	02 d0       	rcall	.+4      	; 0x74c <__ultoa_invert+0x84>
 748:	a9 f7       	brne	.-22     	; 0x734 <__ultoa_invert+0x6c>
 74a:	ea cf       	rjmp	.-44     	; 0x720 <__ultoa_invert+0x58>
 74c:	b4 e0       	ldi	r27, 0x04	; 4
 74e:	a6 95       	lsr	r26
 750:	97 95       	ror	r25
 752:	87 95       	ror	r24
 754:	77 95       	ror	r23
 756:	67 95       	ror	r22
 758:	ba 95       	dec	r27
 75a:	c9 f7       	brne	.-14     	; 0x74e <__ultoa_invert+0x86>
 75c:	00 97       	sbiw	r24, 0x00	; 0
 75e:	61 05       	cpc	r22, r1
 760:	71 05       	cpc	r23, r1
 762:	08 95       	ret
 764:	9b 01       	movw	r18, r22
 766:	ac 01       	movw	r20, r24
 768:	0a 2e       	mov	r0, r26
 76a:	06 94       	lsr	r0
 76c:	57 95       	ror	r21
 76e:	47 95       	ror	r20
 770:	37 95       	ror	r19
 772:	27 95       	ror	r18
 774:	ba 95       	dec	r27
 776:	c9 f7       	brne	.-14     	; 0x76a <__ultoa_invert+0xa2>
 778:	62 0f       	add	r22, r18
 77a:	73 1f       	adc	r23, r19
 77c:	84 1f       	adc	r24, r20
 77e:	95 1f       	adc	r25, r21
 780:	a0 1d       	adc	r26, r0
 782:	08 95       	ret

00000784 <__prologue_saves__>:
 784:	2f 92       	push	r2
 786:	3f 92       	push	r3
 788:	4f 92       	push	r4
 78a:	5f 92       	push	r5
 78c:	6f 92       	push	r6
 78e:	7f 92       	push	r7
 790:	8f 92       	push	r8
 792:	9f 92       	push	r9
 794:	af 92       	push	r10
 796:	bf 92       	push	r11
 798:	cf 92       	push	r12
 79a:	df 92       	push	r13
 79c:	ef 92       	push	r14
 79e:	ff 92       	push	r15
 7a0:	0f 93       	push	r16
 7a2:	1f 93       	push	r17
 7a4:	cf 93       	push	r28
 7a6:	df 93       	push	r29
 7a8:	cd b7       	in	r28, 0x3d	; 61
 7aa:	de b7       	in	r29, 0x3e	; 62
 7ac:	ca 1b       	sub	r28, r26
 7ae:	db 0b       	sbc	r29, r27
 7b0:	0f b6       	in	r0, 0x3f	; 63
 7b2:	f8 94       	cli
 7b4:	de bf       	out	0x3e, r29	; 62
 7b6:	0f be       	out	0x3f, r0	; 63
 7b8:	cd bf       	out	0x3d, r28	; 61
 7ba:	09 94       	ijmp

000007bc <__epilogue_restores__>:
 7bc:	2a 88       	ldd	r2, Y+18	; 0x12
 7be:	39 88       	ldd	r3, Y+17	; 0x11
 7c0:	48 88       	ldd	r4, Y+16	; 0x10
 7c2:	5f 84       	ldd	r5, Y+15	; 0x0f
 7c4:	6e 84       	ldd	r6, Y+14	; 0x0e
 7c6:	7d 84       	ldd	r7, Y+13	; 0x0d
 7c8:	8c 84       	ldd	r8, Y+12	; 0x0c
 7ca:	9b 84       	ldd	r9, Y+11	; 0x0b
 7cc:	aa 84       	ldd	r10, Y+10	; 0x0a
 7ce:	b9 84       	ldd	r11, Y+9	; 0x09
 7d0:	c8 84       	ldd	r12, Y+8	; 0x08
 7d2:	df 80       	ldd	r13, Y+7	; 0x07
 7d4:	ee 80       	ldd	r14, Y+6	; 0x06
 7d6:	fd 80       	ldd	r15, Y+5	; 0x05
 7d8:	0c 81       	ldd	r16, Y+4	; 0x04
 7da:	1b 81       	ldd	r17, Y+3	; 0x03
 7dc:	aa 81       	ldd	r26, Y+2	; 0x02
 7de:	b9 81       	ldd	r27, Y+1	; 0x01
 7e0:	ce 0f       	add	r28, r30
 7e2:	d1 1d       	adc	r29, r1
 7e4:	0f b6       	in	r0, 0x3f	; 63
 7e6:	f8 94       	cli
 7e8:	de bf       	out	0x3e, r29	; 62
 7ea:	0f be       	out	0x3f, r0	; 63
 7ec:	cd bf       	out	0x3d, r28	; 61
 7ee:	ed 01       	movw	r28, r26
 7f0:	08 95       	ret

000007f2 <_exit>:
 7f2:	f8 94       	cli

000007f4 <__stop_program>:
 7f4:	ff cf       	rjmp	.-2      	; 0x7f4 <__stop_program>
